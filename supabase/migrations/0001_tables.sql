CREATE TABLE "public"."warehouses"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "created_at" timestamp with time zone NOT NULL DEFAULT now(),
    "name" text
);

CREATE TABLE "public"."parts"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" text NOT NULL,
    "price" numeric(10, 2) NOT NULL
);

CREATE TABLE "public"."products"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" text NOT NULL,
    "price" numeric(10, 2) NOT NULL
);

CREATE TABLE "public"."product_parts"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "product_id" bigint NOT NULL REFERENCES products(id),
    "part_id" bigint NOT NULL REFERENCES parts(id),
    "quantity" numeric(10, 4) NOT NULL
);

CREATE TABLE "public"."part_changes"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "part_id" bigint NOT NULL REFERENCES parts(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "quantity_change" integer NOT NULL,
    "warehouse_id" bigint REFERENCES warehouses(id) ON UPDATE CASCADE ON DELETE SET NULL,
    "timestamp" timestamp with time zone DEFAULT now() NOT NULL
);

CREATE TABLE "public"."product_changes"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "product_id" bigint NOT NULL REFERENCES products(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "quantity_change" integer NOT NULL,
    "warehouse_id" bigint REFERENCES warehouses(id) ON UPDATE CASCADE ON DELETE SET NULL,
    "timestamp" timestamp with time zone DEFAULT now() NOT NULL
);

CREATE TABLE "public"."purchases"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "purchase_date" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    "carriage" numeric(10, 2) NOT NULL DEFAULT 0.00
);

CREATE TABLE "public"."purchase_part_changes"(
    "purchase_id" bigint NOT NULL REFERENCES purchases(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "part_change_id" bigint NOT NULL REFERENCES part_changes(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "price" numeric(10, 2) NOT NULL,
    "tax" numeric(10, 2) NOT NULL,
    PRIMARY KEY (purchase_id, part_change_id)
);

CREATE TABLE "public"."purchase_product_changes"(
    "purchase_id" bigint NOT NULL REFERENCES purchases(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "product_change_id" bigint NOT NULL REFERENCES product_changes(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "price" numeric(10, 2) NOT NULL,
    "tax" numeric(10, 2) NOT NULL,
    PRIMARY KEY (purchase_id, product_change_id)
);

CREATE TABLE "public"."sales"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "sale_date" timestamp with time zone DEFAULT now(),
    "carriage" numeric(10, 2) NOT NULL DEFAULT 0.00
);

CREATE TABLE "public"."sale_product_changes"(
    "sale_id" bigint NOT NULL REFERENCES sales(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "product_change_id" bigint NOT NULL REFERENCES product_changes(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "price" numeric(10, 2) NOT NULL,
    "tax" numeric(10, 2) NOT NULL,
    PRIMARY KEY (sale_id, product_change_id)
);

CREATE TABLE public.shipments(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "shipment_date" timestamptz DEFAULT now() NOT NULL,
    "carriage" numeric(10, 2) NOT NULL DEFAULT 0.00
);

CREATE TABLE "public"."shipment_part_changes"(
    "shipment_id" bigint NOT NULL REFERENCES shipments(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "part_change_id" bigint NOT NULL REFERENCES part_changes(id) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (shipment_id, part_change_id)
);

CREATE TABLE "public"."shipment_product_changes"(
    "shipment_id" bigint NOT NULL REFERENCES shipments(id) ON UPDATE CASCADE ON DELETE CASCADE,
    "product_change_id" bigint NOT NULL REFERENCES product_changes(id) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (shipment_id, product_change_id)
);

CREATE INDEX idx_part_changes_timestamp ON public.part_changes(part_id, warehouse_id, timestamp);

CREATE INDEX idx_product_changes_timestamp ON public.product_changes(product_id, warehouse_id, timestamp);

-- Grant permissions for all tables
GRANT ALL ON ALL TABLES IN SCHEMA public TO anon, authenticated, service_role;

-- Individual grants for each table and role
DO $$
DECLARE
    tables text[] := ARRAY['warehouses', 'parts', 'products', 'product_parts', 'part_changes', 'product_changes', 'purchases', 'purchase_part_changes', 'purchase_product_changes', 'sales', 'sale_product_changes', 'shipments', 'shipment_part_changes', 'shipment_product_changes'];
    roles text[] := ARRAY['anon', 'authenticated', 'service_role'];
    t text;
    r text;
BEGIN
    FOREACH t IN ARRAY tables LOOP
        FOREACH r IN ARRAY roles LOOP
            EXECUTE format('GRANT DELETE, INSERT, REFERENCES, SELECT, TRIGGER, TRUNCATE, UPDATE ON TABLE "public"."%I" TO "%I"', t, r);
        END LOOP;
    END LOOP;
END
$$;

