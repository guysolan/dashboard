/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as SalesSaleIdImport } from './routes/sales.$saleId'
import { Route as PurchasesPurchaseIdImport } from './routes/purchases.$purchaseId'
import { Route as LayoutLayout2Import } from './routes/_layout/_layout-2'
import { Route as DashboardSalesImport } from './routes/_dashboard/sales'
import { Route as DashboardPurchasesImport } from './routes/_dashboard/purchases'
import { Route as DashboardProductsImport } from './routes/_dashboard/products'
import { Route as DashboardPartsImport } from './routes/_dashboard/parts'
import { Route as LayoutLayout2LayoutBImport } from './routes/_layout/_layout-2/layout-b'
import { Route as LayoutLayout2LayoutAImport } from './routes/_layout/_layout-2/layout-a'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const SalesSaleIdRoute = SalesSaleIdImport.update({
  path: '/sales/$saleId',
  getParentRoute: () => rootRoute,
} as any)

const PurchasesPurchaseIdRoute = PurchasesPurchaseIdImport.update({
  path: '/purchases/$purchaseId',
  getParentRoute: () => rootRoute,
} as any)

const LayoutLayout2Route = LayoutLayout2Import.update({
  id: '/_layout-2',
  getParentRoute: () => LayoutRoute,
} as any)

const DashboardSalesRoute = DashboardSalesImport.update({
  path: '/sales',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPurchasesRoute = DashboardPurchasesImport.update({
  path: '/purchases',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProductsRoute = DashboardProductsImport.update({
  path: '/products',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPartsRoute = DashboardPartsImport.update({
  path: '/parts',
  getParentRoute: () => DashboardRoute,
} as any)

const LayoutLayout2LayoutBRoute = LayoutLayout2LayoutBImport.update({
  path: '/layout-b',
  getParentRoute: () => LayoutLayout2Route,
} as any)

const LayoutLayout2LayoutARoute = LayoutLayout2LayoutAImport.update({
  path: '/layout-a',
  getParentRoute: () => LayoutLayout2Route,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/parts': {
      id: '/_dashboard/parts'
      path: '/parts'
      fullPath: '/parts'
      preLoaderRoute: typeof DashboardPartsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/products': {
      id: '/_dashboard/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof DashboardProductsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/purchases': {
      id: '/_dashboard/purchases'
      path: '/purchases'
      fullPath: '/purchases'
      preLoaderRoute: typeof DashboardPurchasesImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/sales': {
      id: '/_dashboard/sales'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof DashboardSalesImport
      parentRoute: typeof DashboardImport
    }
    '/_layout/_layout-2': {
      id: '/_layout/_layout-2'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutLayout2Import
      parentRoute: typeof LayoutImport
    }
    '/purchases/$purchaseId': {
      id: '/purchases/$purchaseId'
      path: '/purchases/$purchaseId'
      fullPath: '/purchases/$purchaseId'
      preLoaderRoute: typeof PurchasesPurchaseIdImport
      parentRoute: typeof rootRoute
    }
    '/sales/$saleId': {
      id: '/sales/$saleId'
      path: '/sales/$saleId'
      fullPath: '/sales/$saleId'
      preLoaderRoute: typeof SalesSaleIdImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_layout/_layout-2/layout-a': {
      id: '/_layout/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: typeof LayoutLayout2LayoutAImport
      parentRoute: typeof LayoutLayout2Import
    }
    '/_layout/_layout-2/layout-b': {
      id: '/_layout/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: typeof LayoutLayout2LayoutBImport
      parentRoute: typeof LayoutLayout2Import
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardPartsRoute: typeof DashboardPartsRoute
  DashboardProductsRoute: typeof DashboardProductsRoute
  DashboardPurchasesRoute: typeof DashboardPurchasesRoute
  DashboardSalesRoute: typeof DashboardSalesRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardPartsRoute: DashboardPartsRoute,
  DashboardProductsRoute: DashboardProductsRoute,
  DashboardPurchasesRoute: DashboardPurchasesRoute,
  DashboardSalesRoute: DashboardSalesRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface LayoutLayout2RouteChildren {
  LayoutLayout2LayoutARoute: typeof LayoutLayout2LayoutARoute
  LayoutLayout2LayoutBRoute: typeof LayoutLayout2LayoutBRoute
}

const LayoutLayout2RouteChildren: LayoutLayout2RouteChildren = {
  LayoutLayout2LayoutARoute: LayoutLayout2LayoutARoute,
  LayoutLayout2LayoutBRoute: LayoutLayout2LayoutBRoute,
}

const LayoutLayout2RouteWithChildren = LayoutLayout2Route._addFileChildren(
  LayoutLayout2RouteChildren,
)

interface LayoutRouteChildren {
  LayoutLayout2Route: typeof LayoutLayout2RouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutLayout2Route: LayoutLayout2RouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutLayout2RouteWithChildren
  '/parts': typeof DashboardPartsRoute
  '/products': typeof DashboardProductsRoute
  '/purchases': typeof DashboardPurchasesRoute
  '/sales': typeof DashboardSalesRoute
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/': typeof DashboardIndexRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutLayout2RouteWithChildren
  '/parts': typeof DashboardPartsRoute
  '/products': typeof DashboardProductsRoute
  '/purchases': typeof DashboardPurchasesRoute
  '/sales': typeof DashboardSalesRoute
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/': typeof DashboardIndexRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/_dashboard/parts': typeof DashboardPartsRoute
  '/_dashboard/products': typeof DashboardProductsRoute
  '/_dashboard/purchases': typeof DashboardPurchasesRoute
  '/_dashboard/sales': typeof DashboardSalesRoute
  '/_layout/_layout-2': typeof LayoutLayout2RouteWithChildren
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/_dashboard/': typeof DashboardIndexRoute
  '/_layout/_layout-2/layout-a': typeof LayoutLayout2LayoutARoute
  '/_layout/_layout-2/layout-b': typeof LayoutLayout2LayoutBRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/parts'
    | '/products'
    | '/purchases'
    | '/sales'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/'
    | '/layout-a'
    | '/layout-b'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/parts'
    | '/products'
    | '/purchases'
    | '/sales'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/'
    | '/layout-a'
    | '/layout-b'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_layout'
    | '/_dashboard/parts'
    | '/_dashboard/products'
    | '/_dashboard/purchases'
    | '/_dashboard/sales'
    | '/_layout/_layout-2'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/_dashboard/'
    | '/_layout/_layout-2/layout-a'
    | '/_layout/_layout-2/layout-b'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
  PurchasesPurchaseIdRoute: typeof PurchasesPurchaseIdRoute
  SalesSaleIdRoute: typeof SalesSaleIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
  PurchasesPurchaseIdRoute: PurchasesPurchaseIdRoute,
  SalesSaleIdRoute: SalesSaleIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/_layout",
        "/purchases/$purchaseId",
        "/sales/$saleId"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/parts",
        "/_dashboard/products",
        "/_dashboard/purchases",
        "/_dashboard/sales",
        "/_dashboard/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_layout-2"
      ]
    },
    "/_dashboard/parts": {
      "filePath": "_dashboard/parts.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/products": {
      "filePath": "_dashboard/products.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/purchases": {
      "filePath": "_dashboard/purchases.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/sales": {
      "filePath": "_dashboard/sales.tsx",
      "parent": "/_dashboard"
    },
    "/_layout/_layout-2": {
      "filePath": "_layout/_layout-2.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_layout-2/layout-a",
        "/_layout/_layout-2/layout-b"
      ]
    },
    "/purchases/$purchaseId": {
      "filePath": "purchases.$purchaseId.tsx"
    },
    "/sales/$saleId": {
      "filePath": "sales.$saleId.tsx"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    },
    "/_layout/_layout-2/layout-a": {
      "filePath": "_layout/_layout-2/layout-a.tsx",
      "parent": "/_layout/_layout-2"
    },
    "/_layout/_layout-2/layout-b": {
      "filePath": "_layout/_layout-2/layout-b.tsx",
      "parent": "/_layout/_layout-2"
    }
  }
}
ROUTE_MANIFEST_END */
