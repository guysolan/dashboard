/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProductsImport } from './routes/products'
import { Route as PartsImport } from './routes/parts'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as SalesIndexImport } from './routes/sales.index'
import { Route as PurchasesIndexImport } from './routes/purchases.index'
import { Route as SalesSaleIdImport } from './routes/sales.$saleId'
import { Route as PurchasesPurchaseIdImport } from './routes/purchases.$purchaseId'
import { Route as LayoutLayout2Import } from './routes/_layout/_layout-2'
import { Route as LayoutLayout2LayoutBImport } from './routes/_layout/_layout-2/layout-b'
import { Route as LayoutLayout2LayoutAImport } from './routes/_layout/_layout-2/layout-a'

// Create/Update Routes

const ProductsRoute = ProductsImport.update({
  path: '/products',
  getParentRoute: () => rootRoute,
} as any)

const PartsRoute = PartsImport.update({
  path: '/parts',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SalesIndexRoute = SalesIndexImport.update({
  path: '/sales/',
  getParentRoute: () => rootRoute,
} as any)

const PurchasesIndexRoute = PurchasesIndexImport.update({
  path: '/purchases/',
  getParentRoute: () => rootRoute,
} as any)

const SalesSaleIdRoute = SalesSaleIdImport.update({
  path: '/sales/$saleId',
  getParentRoute: () => rootRoute,
} as any)

const PurchasesPurchaseIdRoute = PurchasesPurchaseIdImport.update({
  path: '/purchases/$purchaseId',
  getParentRoute: () => rootRoute,
} as any)

const LayoutLayout2Route = LayoutLayout2Import.update({
  id: '/_layout-2',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLayout2LayoutBRoute = LayoutLayout2LayoutBImport.update({
  path: '/layout-b',
  getParentRoute: () => LayoutLayout2Route,
} as any)

const LayoutLayout2LayoutARoute = LayoutLayout2LayoutAImport.update({
  path: '/layout-a',
  getParentRoute: () => LayoutLayout2Route,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/parts': {
      id: '/parts'
      path: '/parts'
      fullPath: '/parts'
      preLoaderRoute: typeof PartsImport
      parentRoute: typeof rootRoute
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_layout-2': {
      id: '/_layout/_layout-2'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutLayout2Import
      parentRoute: typeof LayoutImport
    }
    '/purchases/$purchaseId': {
      id: '/purchases/$purchaseId'
      path: '/purchases/$purchaseId'
      fullPath: '/purchases/$purchaseId'
      preLoaderRoute: typeof PurchasesPurchaseIdImport
      parentRoute: typeof rootRoute
    }
    '/sales/$saleId': {
      id: '/sales/$saleId'
      path: '/sales/$saleId'
      fullPath: '/sales/$saleId'
      preLoaderRoute: typeof SalesSaleIdImport
      parentRoute: typeof rootRoute
    }
    '/purchases/': {
      id: '/purchases/'
      path: '/purchases'
      fullPath: '/purchases'
      preLoaderRoute: typeof PurchasesIndexImport
      parentRoute: typeof rootRoute
    }
    '/sales/': {
      id: '/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof SalesIndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_layout-2/layout-a': {
      id: '/_layout/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: typeof LayoutLayout2LayoutAImport
      parentRoute: typeof LayoutLayout2Import
    }
    '/_layout/_layout-2/layout-b': {
      id: '/_layout/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: typeof LayoutLayout2LayoutBImport
      parentRoute: typeof LayoutLayout2Import
    }
  }
}

// Create and export the route tree

interface LayoutLayout2RouteChildren {
  LayoutLayout2LayoutARoute: typeof LayoutLayout2LayoutARoute
  LayoutLayout2LayoutBRoute: typeof LayoutLayout2LayoutBRoute
}

const LayoutLayout2RouteChildren: LayoutLayout2RouteChildren = {
  LayoutLayout2LayoutARoute: LayoutLayout2LayoutARoute,
  LayoutLayout2LayoutBRoute: LayoutLayout2LayoutBRoute,
}

const LayoutLayout2RouteWithChildren = LayoutLayout2Route._addFileChildren(
  LayoutLayout2RouteChildren,
)

interface LayoutRouteChildren {
  LayoutLayout2Route: typeof LayoutLayout2RouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutLayout2Route: LayoutLayout2RouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutLayout2RouteWithChildren
  '/parts': typeof PartsRoute
  '/products': typeof ProductsRoute
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/purchases': typeof PurchasesIndexRoute
  '/sales': typeof SalesIndexRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutLayout2RouteWithChildren
  '/parts': typeof PartsRoute
  '/products': typeof ProductsRoute
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/purchases': typeof PurchasesIndexRoute
  '/sales': typeof SalesIndexRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/parts': typeof PartsRoute
  '/products': typeof ProductsRoute
  '/_layout/_layout-2': typeof LayoutLayout2RouteWithChildren
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/purchases/': typeof PurchasesIndexRoute
  '/sales/': typeof SalesIndexRoute
  '/_layout/_layout-2/layout-a': typeof LayoutLayout2LayoutARoute
  '/_layout/_layout-2/layout-b': typeof LayoutLayout2LayoutBRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/parts'
    | '/products'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/purchases'
    | '/sales'
    | '/layout-a'
    | '/layout-b'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/parts'
    | '/products'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/purchases'
    | '/sales'
    | '/layout-a'
    | '/layout-b'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/parts'
    | '/products'
    | '/_layout/_layout-2'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/purchases/'
    | '/sales/'
    | '/_layout/_layout-2/layout-a'
    | '/_layout/_layout-2/layout-b'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  PartsRoute: typeof PartsRoute
  ProductsRoute: typeof ProductsRoute
  PurchasesPurchaseIdRoute: typeof PurchasesPurchaseIdRoute
  SalesSaleIdRoute: typeof SalesSaleIdRoute
  PurchasesIndexRoute: typeof PurchasesIndexRoute
  SalesIndexRoute: typeof SalesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  PartsRoute: PartsRoute,
  ProductsRoute: ProductsRoute,
  PurchasesPurchaseIdRoute: PurchasesPurchaseIdRoute,
  SalesSaleIdRoute: SalesSaleIdRoute,
  PurchasesIndexRoute: PurchasesIndexRoute,
  SalesIndexRoute: SalesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/parts",
        "/products",
        "/purchases/$purchaseId",
        "/sales/$saleId",
        "/purchases/",
        "/sales/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_layout-2"
      ]
    },
    "/parts": {
      "filePath": "parts.tsx"
    },
    "/products": {
      "filePath": "products.tsx"
    },
    "/_layout/_layout-2": {
      "filePath": "_layout/_layout-2.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_layout-2/layout-a",
        "/_layout/_layout-2/layout-b"
      ]
    },
    "/purchases/$purchaseId": {
      "filePath": "purchases.$purchaseId.tsx"
    },
    "/sales/$saleId": {
      "filePath": "sales.$saleId.tsx"
    },
    "/purchases/": {
      "filePath": "purchases.index.tsx"
    },
    "/sales/": {
      "filePath": "sales.index.tsx"
    },
    "/_layout/_layout-2/layout-a": {
      "filePath": "_layout/_layout-2/layout-a.tsx",
      "parent": "/_layout/_layout-2"
    },
    "/_layout/_layout-2/layout-b": {
      "filePath": "_layout/_layout-2/layout-b.tsx",
      "parent": "/_layout/_layout-2"
    }
  }
}
ROUTE_MANIFEST_END */
