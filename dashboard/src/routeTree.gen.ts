/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as SalesSaleIdImport } from './routes/sales.$saleId'
import { Route as PurchasesPurchaseIdImport } from './routes/purchases.$purchaseId'
import { Route as DashboardWarehousesImport } from './routes/_dashboard/warehouses'
import { Route as DashboardSettingsImport } from './routes/_dashboard/settings'
import { Route as DashboardOrdersImport } from './routes/_dashboard/orders'
import { Route as DashboardItemsImport } from './routes/_dashboard/items'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const SalesSaleIdRoute = SalesSaleIdImport.update({
  path: '/sales/$saleId',
  getParentRoute: () => rootRoute,
} as any)

const PurchasesPurchaseIdRoute = PurchasesPurchaseIdImport.update({
  path: '/purchases/$purchaseId',
  getParentRoute: () => rootRoute,
} as any)

const DashboardWarehousesRoute = DashboardWarehousesImport.update({
  path: '/warehouses',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrdersRoute = DashboardOrdersImport.update({
  path: '/orders',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardItemsRoute = DashboardItemsImport.update({
  path: '/items',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/items': {
      id: '/_dashboard/items'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof DashboardItemsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/orders': {
      id: '/_dashboard/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof DashboardOrdersImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/settings': {
      id: '/_dashboard/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/warehouses': {
      id: '/_dashboard/warehouses'
      path: '/warehouses'
      fullPath: '/warehouses'
      preLoaderRoute: typeof DashboardWarehousesImport
      parentRoute: typeof DashboardImport
    }
    '/purchases/$purchaseId': {
      id: '/purchases/$purchaseId'
      path: '/purchases/$purchaseId'
      fullPath: '/purchases/$purchaseId'
      preLoaderRoute: typeof PurchasesPurchaseIdImport
      parentRoute: typeof rootRoute
    }
    '/sales/$saleId': {
      id: '/sales/$saleId'
      path: '/sales/$saleId'
      fullPath: '/sales/$saleId'
      preLoaderRoute: typeof SalesSaleIdImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardItemsRoute: typeof DashboardItemsRoute
  DashboardOrdersRoute: typeof DashboardOrdersRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardWarehousesRoute: typeof DashboardWarehousesRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardItemsRoute: DashboardItemsRoute,
  DashboardOrdersRoute: DashboardOrdersRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardWarehousesRoute: DashboardWarehousesRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LayoutRoute
  '/items': typeof DashboardItemsRoute
  '/orders': typeof DashboardOrdersRoute
  '/settings': typeof DashboardSettingsRoute
  '/warehouses': typeof DashboardWarehousesRoute
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutRoute
  '/items': typeof DashboardItemsRoute
  '/orders': typeof DashboardOrdersRoute
  '/settings': typeof DashboardSettingsRoute
  '/warehouses': typeof DashboardWarehousesRoute
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_layout': typeof LayoutRoute
  '/_dashboard/items': typeof DashboardItemsRoute
  '/_dashboard/orders': typeof DashboardOrdersRoute
  '/_dashboard/settings': typeof DashboardSettingsRoute
  '/_dashboard/warehouses': typeof DashboardWarehousesRoute
  '/purchases/$purchaseId': typeof PurchasesPurchaseIdRoute
  '/sales/$saleId': typeof SalesSaleIdRoute
  '/_dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/items'
    | '/orders'
    | '/settings'
    | '/warehouses'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/items'
    | '/orders'
    | '/settings'
    | '/warehouses'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_layout'
    | '/_dashboard/items'
    | '/_dashboard/orders'
    | '/_dashboard/settings'
    | '/_dashboard/warehouses'
    | '/purchases/$purchaseId'
    | '/sales/$saleId'
    | '/_dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  LayoutRoute: typeof LayoutRoute
  PurchasesPurchaseIdRoute: typeof PurchasesPurchaseIdRoute
  SalesSaleIdRoute: typeof SalesSaleIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  LayoutRoute: LayoutRoute,
  PurchasesPurchaseIdRoute: PurchasesPurchaseIdRoute,
  SalesSaleIdRoute: SalesSaleIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/_layout",
        "/purchases/$purchaseId",
        "/sales/$saleId"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/items",
        "/_dashboard/orders",
        "/_dashboard/settings",
        "/_dashboard/warehouses",
        "/_dashboard/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx"
    },
    "/_dashboard/items": {
      "filePath": "_dashboard/items.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/orders": {
      "filePath": "_dashboard/orders.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/settings": {
      "filePath": "_dashboard/settings.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/warehouses": {
      "filePath": "_dashboard/warehouses.tsx",
      "parent": "/_dashboard"
    },
    "/purchases/$purchaseId": {
      "filePath": "purchases.$purchaseId.tsx"
    },
    "/sales/$saleId": {
      "filePath": "sales.$saleId.tsx"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
